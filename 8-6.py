#개미전사
#동적 프로그래밍 바텀업
#p.220

#식량창고개수 n(3<=n<=100)
n= int(input())

#각 창고별 식량의 개수 K. 공백기준(0<=k<=1000)
k = list(map(int, input().split()))

#식량창고 털때마다 얻는 식량 저장 테이블
#bottom-up방식이라 점점 커진다.
d = [0] * 101

#첫번째랑 두번쨰 식량은 앞에꺼랑 더할수없으므로 그냥 초기화한다.
d[0] = k[0]
d[1] = max(d[0], k[1]) #둘중 하나 골라야함

for x in range(2, n):

	#이전에 털었던 식량들과 지금창고의 식량을 합친다.
	#그 전꺼가 더 큰지, 그 전전꺼랑 합친게 더 큰지 둘중 하나 골라서 넣는다.
	d[x] = max(d[x-1], d[x-2] + k[x])

print(d[n-1])


